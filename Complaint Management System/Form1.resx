<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnToView.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9ah76X/Y0hvUtrYuXgAAAABJRU5ErkJggg==
</value>
  </data>
</root>