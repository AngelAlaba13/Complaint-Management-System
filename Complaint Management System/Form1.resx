<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>